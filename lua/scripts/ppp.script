#!/usr/bin/luajit
--------------------------------------------------------------------------------
--  This file is part of NetCamel
--  Copyright (C) 2014,2015 Lee Essen <lee.essen@nowonline.co.uk>
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.
------------------------------------------------------------------------------

--
-- This script is called by pppd when various things happen during the
-- ppp connection process
--
-- We should be linked by multiple sources, therefore we need to look
-- at arg[0] to work out what function we need to perform
--
package.path = "/netcamel/lib/?.lua;"..package.path

--
-- We need to access the database for resolvers and routes
--
runtime = require("runtime")

--
-- Needed for split
--
require("utils")

--
-- Pull out the relevent bits from the environment
--
local interface	= os.getenv("IFNAME")
local ip		= os.getenv("IPLOCAL")
local server	= os.getenv("IPREMOTE")
local dns1		= os.getenv("DNS1")
local dns2		= os.getenv("DNS2")
local extras	= arg[6]

local defaultroute 			= false
local resolve_pri			= "40"
local defaultroute_pri		= "40"

--
-- Find the logfile entry in extra so that we can redirect our output
--
local logfile = extras and extras:match("%f[^%s%z]logfile=([^%s]+)%f[%s%z]")
if logfile then runtime.redirect(logfile) end

--
-- Process our other extra arguments...
--
if extras then
	for var in each(split(extras, "%s")) do
		print("Extra="..var)

		local k, v = var:match("^([^=]+)=?(.-)$")
		if k == "logfile" then
		elseif k == "defaultroute" then defaultroute = true
		elseif k == "resolv_pri" then resolv_pri = v
		elseif k == "defaultroute_pri" then resolv_pri = v
		else print("unknown extra option: "..k) end
	end
end

--
-- Work out which action we are performing
--
local action = arg[0]:match("/?([^/]-)$")
print("Action is: " .. action)
print("Args1="..tostring(arg[1]))
print("Args2="..tostring(arg[2]))
print("Args3="..tostring(arg[3]))

if action == "ip-up" then
	runtime.remove_resolvers(interface)
	runtime.remove_defaultroute(interface)

	if dns1 then runtime.add_resolver(interface, dns1, resolv_pri) end
	if dns2 then runtime.add_resolver(interface, dns2, resolv_pri) end
	if defaultroute then runtime.add_defaultroute(interface, server, defaultroute_pri) end

	runtime.update_resolvers()
	runtime.update_defaultroute()
end

if action == "ip-down" then
	runtime.remove_resolvers(interface)
	runtime.remove_defaultroute(interface)
	runtime.update_resolvers()
	runtime.update_defaultroute()
end


