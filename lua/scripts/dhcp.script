#!/usr/bin/luajit
--------------------------------------------------------------------------------
--  This file is part of NetCamel
--  Copyright (C) 2014,2015 Lee Essen <lee.essen@nowonline.co.uk>
--
--  This program is free software: you can redistribute it and/or modify
--  it under the terms of the GNU General Public License as published by
--  the Free Software Foundation, either version 3 of the License, or
--  (at your option) any later version.
--
--  This program is distributed in the hope that it will be useful,
--  but WITHOUT ANY WARRANTY; without even the implied warranty of
--  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--  GNU General Public License for more details.
--
--  You should have received a copy of the GNU General Public License
--  along with this program.  If not, see <http://www.gnu.org/licenses/>.
------------------------------------------------------------------------------

--
-- This script is called by udhcpc when a lease is granted, fails or is renewed.
--
-- The role of this script is to configure the interface, setup the default
-- route and configure the resolvers.
--
package.path = "/netcamel/lib/?.lua;"..package.path

--
-- We need to access the database
--
runtime = require("runtime")

--
-- For string split and each
--
require("utils")

--
-- Pull out all of the environment variables
--
local interface 		= os.getenv("interface")
local ip				= os.getenv("ip")
local mask				= os.getenv("mask")
local broadcast 		= os.getenv("broadcast") or "+"
local routers 			= split(os.getenv("router") or "", "%s")
local dns 				= split(os.getenv("dns") or "", "%s")

--
-- Load the extra variables
--
local vars = load_vars(interface)

local logfile               = vars["logfile"]
local no_resolv             = vars["no-resolv"]
local no_defaultroute       = vars["no_defaultroute"]
local resolv_pri            = vars["resolv-pri"] or "60"
local defaultroute_pri      = vars["defaultroute-pri"] or "60"

local action 			= arg[1]

--
-- Remove anything stored from this interface so we are starting clean
--

runtime.remove_resolvers(interface)
runtime.remove_defaultroute(interface)


print("Performing Action: "..action)

if action == "deconfig" then
	--
	-- Deconfig means clear out the interface ready to start
	-- or when finishing.
	--
	os.execute(string.format("ip link set %s up", interface))
	os.execute(string.format("ip addr flush dev %s", interface))
end

if action == "leasefail" or action == "nak" then
end

if action == "renew" or action == "bound" then
	--
	-- Populate new entries if we are configured to do so...
	--
	if not no_resolv then
		for resolver in each(dns) do
			runtime.add_resolver(interface, resolver, resolv_pri)
		end
	end
	if not no_defaultroute then
		for router in each(routers) do
			runtime.add_defaultroute(interface, router, defaultroute_pri)
		end
	end

	--
	-- Configure the interface
	--
	os.execute(string.format("ip addr flush dev %s", interface))
	os.execute(string.format("ip addr add %s/%s broadcast %s dev %s", ip, mask, broadcast, interface))
end

--
-- Update the resolves and defaultroute based on any changed made in the
-- transient table
--
runtime.update_resolvers()
runtime.update_defaultroute()

os.exit(0)
